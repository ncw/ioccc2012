#!/usr/bin/python
"""
Unit tests the mersenne binary
"""

import sys
from subprocess import Popen, PIPE
from time import time

# Results for 400 iterations of Lucas-Lehmer
# 
# These are from George Woltman's Prime95

# (exponent, bit_32_to_bit_63_residue)

residues = (
(2654999, 0x07EE900D), (2621441, 0x2BC1DACD), (2621439, 0xBCBA58F1),
(2653987, 0xB005CACC), (2651879, 0x38DCD06B), (2654003, 0x1ED556E7),
(2620317, 0x09DB64F8), (2539613, 0x4146EECA), (2573917, 0x939DA3B3),
(2359297, 0x73A131F0), (2359295, 0x53A92203), (2646917, 0x71D4E5A2),
(2605473, 0xE11637FC), (2495213, 0x89D80370), (2540831, 0x2CF01FBB),
(2654557, 0x4106F46F), (2388831, 0xA508B5A7), (2654777, 0x9E744AA3),
(2584313, 0x800E9A61), (2408447, 0x8C91E8AA), (2408449, 0x437ECC01),
(2345677, 0x60AEE9C2), (2332451, 0xAB209667), (2330097, 0x3FB88055),
(2333851, 0xFE4ECF19), (2444819, 0x56BF33C5), (2555671, 0x9DC03527),
(2654333, 0xE81BCF40), (2543123, 0x379CA95D), (2432123, 0x5952676A),
(2321123, 0x24DCD25F), (2654227, 0xAC3B7F2B),
(2329999, 0xF5E902A5), (2293761, 0x9E4BBB8A), (2293759, 0x1901F07B),
(2236671, 0x45EB162A), (2193011, 0x382B6E4B), (2329001, 0x4FF052BB),
(2327763, 0x3B315213), (2325483, 0x0DC5165A), (2323869, 0xD220E27F),
(2315679, 0xF650BE33), (2004817, 0xC2FF3440), (2130357, 0xC25804D8),
(2288753, 0xA4DD9AAD), (2266413, 0x675257DB), (2244765, 0xC08FF487),
(2222517, 0x1A128B22), (2200339, 0x0EB0E827), (2328117, 0x0A24673A),
(2329557, 0x2E267692), (2188001, 0xD012AF6A), (2166567, 0x509BA41A),
(2144651, 0x54CFC0E6), (2122923, 0xA47068E6), (2100559, 0xACFAB4E1),
(2088461, 0xEA01E860), (2066543, 0x847DF0D0), (2044767, 0x04225888),
(2022823, 0x6EA34B32), (2328527, 0xC55E3E05), (2327441, 0x207C8CEC),
(2326991, 0x0A4F2ACD), (2009987, 0xE6A59DEF),
(1999999, 0xD645A18F), (1966081, 0xB88828A1), (1966079, 0x5BD87C45),
(1998973, 0xCBDD74F7), (1997651, 0x666B0CB1), (1675001, 0x50A94DB7),
(1977987, 0x30D1CD1F), (1955087, 0x5B9426A4), (1933071, 0x23C1AF0B),
(1911957, 0xF7699248), (1899247, 0x11C76E04), (1877431, 0xA3299B39),
(1855067, 0x35243683), (1833457, 0xCF630DC0), (1811987, 0x7C7022EC),
(1799789, 0xEFEC47B7), (1777773, 0x0F16E2D6), (1755321, 0x1AC5D492),
(1733333, 0x5DA0555E), (1711983, 0xDC19DA8B), (1699779, 0x2B44914E),
(1677323, 0x03D3980B), (1995091, 0x922E555B), (1993041, 0x0CA8451B),
(1991991, 0xDFFB212D), (1679779, 0x51D75E0F), (1684993, 0x048BBCE8),
(1970009, 0x646E0DFA), (1957445, 0xC8D244ED), (1999997, 0x5FC899D0),
(1998983, 0x1CD518AA), (1999007, 0xA9DD8591),
(1674999, 0xDB0169D8), (1638401, 0xD3F8A8C5), (1638399, 0xF270D8DD),
(1674997, 0xC824EF15), (1674551, 0xD844AEAD), (1674001, 0x8F5EFA50),
(1345001, 0x18EE2E2D), (1655083, 0x09B30DEE), (1633941, 0x0B87C8B1),
(1611557, 0x6B57E48D), (1599549, 0x48EA38B2), (1577771, 0xCE84D9DC),
(1555947, 0x6797EEF4), (1533349, 0xD6897409), (1511861, 0x8A8177AC),
(1499625, 0x56BB6FB3), (1477941, 0xF3DD8ED3), (1455931, 0x31A222C7),
(1433069, 0x28F01E1B), (1411747, 0x680C6E39), (1399449, 0xB7F01A54),
(1377247, 0xE656F652), (1355991, 0xB2AA2819), (1350061, 0x31F9A728),
(1673881, 0xA51D38E4), (1672771, 0x5474B6F9), (1671221, 0x2710DDEA),
(1670551, 0x31FC3838), (1660881, 0x4C5B22C5), (1650771, 0x998F747B),
(1655001, 0x164659A6), (1674339, 0xED2D23E2),
(1344999, 0x158AA064), (1310721, 0x5694A427), (1310719, 0x258BDDE3),
(1344997, 0x1D059D4F), (1344551, 0x60606AA3), (1344001, 0x9AC6AB36),
( 675001, 0x688DF7EE), (1322851, 0x3A000D0A), (1300993, 0x77CB0184),
(1288771, 0x7431D9E2), (1266711, 0xB4BC4E8D), (1244881, 0x48BC9FF9),
(1222991, 0x3F5FC39E), (1200881, 0xD5DF4944), (1188441, 0xD9D8968B),
(1166661, 0xD4AB97F4), (1144221, 0x9940943B), (1122001, 0x647406B8),
(1100881, 0x3AD40CE0), (1088511, 0xD578BB51), (1066837, 0x2F82BFBB),
(1044811, 0x7C6EDDD1), (1022991, 0x6A1C2DD4), (1000001, 0x2879748F),
(1343881, 0xB59E8006), (1342771, 0x87563FFE), (1341221, 0x29AD6127),
(1340551, 0x17DB4ACB), (1330881, 0x9642F068), ( 951951, 0xB57517EE),
( 891891, 0xC0D97D8D), ( 773337, 0xA1FF9438)
)

# Known mersenne primes - these are from Ernst Mayer

known_primes = (
    2,3,5,7,13,17,19,31,61,89,107,127,521,607,
    1279,2203,2281,3217,4253,4423,9689,9941,11213,19937,21701,23209,
    44497,86243,110503,132049,216091,756839,859433,1257787,1398269,
    2976221,3021377
    )

def test(binary, p, iterations=None):
    """
    Run a test
    """
    arg = ["./" + binary, str(p)]
    if iterations:
        arg.append(str(iterations))
    start = time()
    print "Running %r" % arg
    p = Popen(arg, stdout=PIPE, stderr=PIPE)
    stdout, stderr = p.communicate()
    elapsed = time() - start
    print "That took %.3fs" % elapsed
    assert stderr == ""
    stdout = stdout.strip()
    print "Result: %r" % stdout
    return int(stdout, 0)

def main():
    if len(sys.argv) != 2:
        print >>sys.sdterr, "Syntax: %s binary_to_test" % sys.argv[0]
    _, binary = sys.argv
    for p in known_primes:
        if p <= 5:
            continue
        if p > 50000:
            break               # FIXME
        residue = test(binary, p)
        assert residue == 0
        print "M(%d) is prime" % p
    for p, expected_residue in residues:
        print "Checking residue for M(%d)" % p
        actual_residue = test(binary, p, 400)
        actual_residue >>= 32
        assert expected_residue == actual_residue, "Residue check failed"
        print "Check for M(%d) OK" % p
    print "All OK"

if __name__ == "__main__":
    main()
